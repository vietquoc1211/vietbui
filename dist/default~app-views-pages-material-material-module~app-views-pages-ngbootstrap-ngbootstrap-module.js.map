{"version":3,"sources":["webpack:///./node_modules/ngx-clipboard/fesm5/ngx-clipboard.js","webpack:///./node_modules/ngx-window-token/fesm5/ngx-window-token.js","webpack:///./src/app/views/partials/content/general/material-preview/material-preview.component.html","webpack:///./src/app/views/partials/content/general/material-preview/material-preview.component.scss","webpack:///./src/app/views/partials/content/general/material-preview/material-preview.component.ts","webpack:///./src/app/views/partials/content/general/material-preview/material-preview.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACX;AAC0B;AAC6H;;AAEtL;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,qCAAqC;AAC/E;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,0CAA0C;AACpF;AACA,sCAAsC,qCAAqC;AAC3E;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;A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","file":"default~app-views-pages-material-material-module~app-views-pages-ngbootstrap-ngbootstrap-module.js","sourcesContent":["import { WINDOW } from 'ngx-window-token';\nimport { Subject } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, Directive, EventEmitter, HostListener, Input, Output, TemplateRef, ViewContainerRef, NgModule, defineInjectable, inject } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\nvar ClipboardService = /** @class */ (function () {\r\n    function ClipboardService(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n        this.copySubject = new Subject();\r\n        this.copyResponse$ = this.copySubject.asObservable();\r\n        this.config = {};\r\n    }\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.configure = /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        this.config = config;\r\n    };\r\n    /**\r\n     * @param {?} content\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.copy = /**\r\n     * @param {?} content\r\n     * @return {?}\r\n     */\r\n    function (content) {\r\n        if (!this.isSupported || !content) {\r\n            return this.pushCopyResponse({ isSuccess: false, content: content });\r\n        }\r\n        /** @type {?} */\r\n        var copyResult = this.copyFromContent(content);\r\n        if (copyResult) {\r\n            return this.pushCopyResponse({ content: content, isSuccess: copyResult });\r\n        }\r\n        return this.pushCopyResponse({ isSuccess: false, content: content });\r\n    };\r\n    Object.defineProperty(ClipboardService.prototype, \"isSupported\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.isTargetValid = /**\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    };\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     * @param {?} targetElm\r\n     * @param {?=} isFocus\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.copyFromInputElement = /**\r\n     * Attempts to copy from an input `targetElm`\r\n     * @param {?} targetElm\r\n     * @param {?=} isFocus\r\n     * @return {?}\r\n     */\r\n    function (targetElm, isFocus) {\r\n        if (isFocus === void 0) { isFocus = true; }\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            /** @type {?} */\r\n            var re = this.copyText();\r\n            this.clearSelection(isFocus ? targetElm : undefined, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.isCopySuccessInIE11 = /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     * @param {?} content\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.copyFromContent = /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     * @param {?} content\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    function (content, container) {\r\n        if (container === void 0) { container = this.document.body; }\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            }\r\n            catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n        /** @type {?} */\r\n        var toReturn = this.copyFromInputElement(this.tempTextArea, false);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        return toReturn;\r\n    };\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.destroy = /**\r\n     * Remove temporary textarea if any exists.\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    function (container) {\r\n        if (container === void 0) { container = this.document.body; }\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    /**\r\n     * Select the target html input element.\r\n     * @private\r\n     * @param {?} inputElement\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.selectTarget = /**\r\n     * Select the target html input element.\r\n     * @private\r\n     * @param {?} inputElement\r\n     * @return {?}\r\n     */\r\n    function (inputElement) {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.copyText = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.document.execCommand('copy');\r\n    };\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     * @private\r\n     * @param {?} inputElement\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.clearSelection = /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     * @private\r\n     * @param {?} inputElement\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    function (inputElement, window) {\r\n        inputElement && inputElement.focus();\r\n        window.getSelection().removeAllRanges();\r\n    };\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     * @private\r\n     * @param {?} doc\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.createTempTextArea = /**\r\n     * Creates a fake textarea for copy command.\r\n     * @private\r\n     * @param {?} doc\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    function (doc, window) {\r\n        /** @type {?} */\r\n        var isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        /** @type {?} */\r\n        var ta;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        /** @type {?} */\r\n        var yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    };\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     * @param {?} response\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.pushCopyResponse = /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     * @param {?} response\r\n     * @return {?}\r\n     */\r\n    function (response) {\r\n        this.copySubject.next(response);\r\n    };\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     * @param {?} response\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.pushCopyReponse = /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     * @param {?} response\r\n     * @return {?}\r\n     */\r\n    function (response) {\r\n        this.pushCopyResponse(response);\r\n    };\r\n    ClipboardService.decorators = [\r\n        { type: Injectable, args: [{ providedIn: 'root' },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ClipboardService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [WINDOW,] }] }\r\n    ]; };\r\n    /** @nocollapse */ ClipboardService.ngInjectableDef = defineInjectable({ factory: function ClipboardService_Factory() { return new ClipboardService(inject(DOCUMENT), inject(WINDOW, 8)); }, token: ClipboardService, providedIn: \"root\" });\r\n    return ClipboardService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ClipboardDirective = /** @class */ (function () {\r\n    function ClipboardDirective(clipboardSrv) {\r\n        this.clipboardSrv = clipboardSrv;\r\n        this.cbOnSuccess = new EventEmitter();\r\n        this.cbOnError = new EventEmitter();\r\n    }\r\n    // tslint:disable-next-line:no-empty\r\n    // tslint:disable-next-line:no-empty\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.ngOnInit = \r\n    // tslint:disable-next-line:no-empty\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.clipboardSrv.destroy(this.container);\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.onClick = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        }\r\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        }\r\n        else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    };\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param succeeded\r\n     */\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @private\r\n     * @param {?} succeeded\r\n     * @param {?} copiedContent\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.handleResult = /**\r\n     * Fires an event based on the copy operation result.\r\n     * @private\r\n     * @param {?} succeeded\r\n     * @param {?} copiedContent\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (succeeded, copiedContent, event) {\r\n        /** @type {?} */\r\n        var response = {\r\n            isSuccess: succeeded,\r\n            event: event\r\n        };\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        }\r\n        else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n        this.clipboardSrv.pushCopyResponse(response);\r\n    };\r\n    ClipboardDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[ngxClipboard]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ClipboardDirective.ctorParameters = function () { return [\r\n        { type: ClipboardService }\r\n    ]; };\r\n    ClipboardDirective.propDecorators = {\r\n        targetElm: [{ type: Input, args: ['ngxClipboard',] }],\r\n        container: [{ type: Input }],\r\n        cbContent: [{ type: Input }],\r\n        cbSuccessMsg: [{ type: Input }],\r\n        cbOnSuccess: [{ type: Output }],\r\n        cbOnError: [{ type: Output }],\r\n        onClick: [{ type: HostListener, args: ['click', ['$event.target'],] }]\r\n    };\r\n    return ClipboardDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ClipboardIfSupportedDirective = /** @class */ (function () {\r\n    function ClipboardIfSupportedDirective(_clipboardService, _viewContainerRef, _templateRef) {\r\n        this._clipboardService = _clipboardService;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._templateRef = _templateRef;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ClipboardIfSupportedDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    };\r\n    ClipboardIfSupportedDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[ngxClipboardIfSupported]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ClipboardIfSupportedDirective.ctorParameters = function () { return [\r\n        { type: ClipboardService },\r\n        { type: ViewContainerRef },\r\n        { type: TemplateRef }\r\n    ]; };\r\n    return ClipboardIfSupportedDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ClipboardModule = /** @class */ (function () {\r\n    function ClipboardModule() {\r\n    }\r\n    ClipboardModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\r\n                    exports: [ClipboardDirective, ClipboardIfSupportedDirective]\r\n                },] }\r\n    ];\r\n    return ClipboardModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ClipboardService, ClipboardDirective, ClipboardModule, ClipboardIfSupportedDirective };\n\n//# sourceMappingURL=ngx-clipboard.js.map","import { InjectionToken } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar WINDOW = new InjectionToken('WindowToken', typeof window !== 'undefined' && window.document ? { providedIn: 'root', factory: (/**\r\n     * @return {?}\r\n     */\r\n    function () { return window; }) } : undefined);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { WINDOW };\n\n//# sourceMappingURL=ngx-window-token.js.map","module.exports = \"<kt-portlet [ngClass]=\\\"'kt-portlet--ngviewer'\\\" *ngIf=\\\"viewItem\\\">\\n\\t<kt-portlet-header [title]=\\\"viewItem.beforeCodeTitle\\\">\\n\\t\\t<ng-container ktPortletTools>\\n\\t\\t\\t<!-- <ul class=\\\"kt-portlet__nav\\\">\\n\\t\\t\\t\\t<li class=\\\"kt-portlet__nav-item\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"hasExampleSource()\\\" (click)=\\\"changeCodeVisibility()\\\" class=\\\"kt-portlet__nav-link kt-portlet__nav-link--icon\\\"\\n\\t\\t\\t\\t\\t\\ttitle=\\\"View Source\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-code\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul> -->\\n\\t\\t\\t<div class=\\\"kt-portlet__head-group\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\"\\n\\t\\t\\t\\t\\t*ngIf=\\\"hasExampleSource()\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"changeCodeVisibility()\\\"\\n\\t\\t\\t\\t\\ttitle=\\\"View Source\\\"\\n\\t\\t\\t\\t\\tclass=\\\"btn btn-clean btn-sm btn-icon btn-icon-md\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"la la-code\\\"></i>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</ng-container>\\n\\t</kt-portlet-header>\\n\\n\\t<kt-portlet-body>\\n\\t\\t<div class=\\\"kt-portlet__preview\\\" *ngIf=\\\"viewItem.beforeCodeDescription\\\">\\n\\t\\t\\t<div class=\\\"kt-alert kt-alert--icon kt-alert--air kt-alert--square alert alert-dismissible kt-margin-bottom-30\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"classes\\\" role=\\\"alert\\\">\\n\\t\\t\\t\\t<div class=\\\"kt-alert__text\\\" [innerHTML]=\\\"viewItem.beforeCodeDescription | safe: 'html'\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"hasExampleSource()\\\" class=\\\"kt-portlet__preview kt-portlet__code\\\" [ngClass]=\\\"{'kt-portlet__code--show' : viewItem.isCodeVisible}\\\">\\n\\t\\t\\t<mat-tab-group *ngIf=\\\"viewItem.isCodeVisible\\\">\\n\\t\\t\\t\\t<mat-tab label=\\\"HTML\\\" *ngIf=\\\"viewItem.htmlCode\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\n\\t\\t\\t\\t\\t\\tngxClipboard\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.htmlCode\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.htmlCode\\\"></code></pre>\\n\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t<mat-tab label=\\\"TS\\\" *ngIf=\\\"viewItem.tsCode\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\n\\t\\t\\t\\t\\t\\tngxClipboard\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.tsCode\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.tsCode\\\"></code></pre>\\n\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t<mat-tab label=\\\"CSS\\\" *ngIf=\\\"viewItem.cssCode\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\n\\t\\t\\t\\t\\t\\tngxClipboard\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.cssCode\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.cssCode\\\"></code></pre>\\n\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t<mat-tab label=\\\"SCSS\\\" *ngIf=\\\"viewItem.scssCode\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\n\\t\\t\\t\\t\\t\\tngxClipboard\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.scssCode\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.scssCode\\\"></code></pre>\\n\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t</mat-tab-group>\\n\\t\\t</div>\\n\\n\\t\\t<!-- view -->\\n\\t\\t<div class=\\\"kt-portlet__preview\\\">\\n\\t\\t\\t<ng-content></ng-content>\\n\\t\\t</div>\\n\\t\\t<!-- / view -->\\n\\n\\t\\t<!-- after Code Title -->\\n\\t\\t<div *ngIf=\\\"viewItem.afterCodeTitle\\\" class=\\\"kt-portlet__preview\\\" [innerHTML]=\\\"viewItem.afterCodeTitle | safe: 'html'\\\">\\n\\t\\t</div>\\n\\t\\t<!-- / after Code Title -->\\n\\n\\t\\t<!-- after Code Description -->\\n\\t\\t<div *ngIf=\\\"viewItem.afterCodeDescription\\\" class=\\\"kt-portlet__preview\\\" [innerHTML]=\\\"viewItem.afterCodeDescription | safe: 'html'\\\">\\n\\t\\t</div>\\n\\t\\t<!-- / after Code Description -->\\n\\t</kt-portlet-body>\\n\\n\\t<kt-portlet-footer></kt-portlet-footer>\\n</kt-portlet>\\n\"","module.exports = \":host .kt-portlet.kt-portlet--ngviewer .kt-portlet__body {\\n  padding: 1.75rem 1.75rem; }\\n\\n:host .kt-portlet.kt-portlet--ngviewer .kt-portlet__body .kt-portlet__code.kt-portlet__code--show {\\n  margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcGFydGlhbHMvY29udGVudC9nZW5lcmFsL21hdGVyaWFsLXByZXZpZXcvRDpcXE15U291cmNlXFx2aWV0YnVpL3NyY1xcYXBwXFx2aWV3c1xccGFydGlhbHNcXGNvbnRlbnRcXGdlbmVyYWxcXG1hdGVyaWFsLXByZXZpZXdcXG1hdGVyaWFsLXByZXZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSx3QkFBd0IsRUFBQTs7QUFGaEM7RUFNUyxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhcnRpYWxzL2NvbnRlbnQvZ2VuZXJhbC9tYXRlcmlhbC1wcmV2aWV3L21hdGVyaWFsLXByZXZpZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG5cdC5rdC1wb3J0bGV0Lmt0LXBvcnRsZXQtLW5ndmlld2VyIC5rdC1wb3J0bGV0X19ib2R5IHtcbiAgICAgICAgcGFkZGluZzogMS43NXJlbSAxLjc1cmVtO1xuICAgIH1cblxuICAgIC5rdC1wb3J0bGV0Lmt0LXBvcnRsZXQtLW5ndmlld2VyIC5rdC1wb3J0bGV0X19ib2R5IC5rdC1wb3J0bGV0X19jb2RlLmt0LXBvcnRsZXRfX2NvZGUtLXNob3cge1xuICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB9XG59XG4iXX0= */\"","// Angular\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'kt-material-preview',\n\ttemplateUrl: './material-preview.component.html',\n\tstyleUrls: ['./material-preview.component.scss'],\n})\nexport class MaterialPreviewComponent implements OnInit {\n\t// Public properties\n\t@Input() viewItem: any;\n\n\t/**\n\t * Component constructor\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\n\t */\n\n\t/**\n\t * On init\n\t */\n\tngOnInit() {\n\t}\n\n\t/**\n\t * Toggle visibility\n\t */\n\tchangeCodeVisibility(): void {\n\t\tthis.viewItem.isCodeVisible = !this.viewItem.isCodeVisible;\n\t}\n\n\t/**\n\t * Check examples existing\n\t */\n\thasExampleSource(): boolean {\n\t\tif (!this.viewItem) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.viewItem.cssCode && !this.viewItem.htmlCode && !this.viewItem.scssCode && !this.viewItem.tsCode) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","// Angular\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ClipboardModule } from 'ngx-clipboard';\n// Perfect ScrollBar\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { MaterialPreviewComponent } from './material-preview.component';\n// Core Module\nimport { CoreModule } from '../../../../../core/core.module';\nimport { PortletModule } from '../portlet/portlet.module';\n// Highlight JS\nimport { HighlightModule } from 'ngx-highlightjs';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCoreModule,\n\t\tHighlightModule,\n\t\tPerfectScrollbarModule,\n\t\tPortletModule,\n\t\tClipboardModule,\n\n\t\t// angular material modules\n\t\tMatTabsModule,\n\t\tMatExpansionModule,\n\t\tMatCardModule,\n\t\tMatIconModule,\n\t],\n\texports: [MaterialPreviewComponent],\n\tdeclarations: [MaterialPreviewComponent]\n})\nexport class MaterialPreviewModule {\n}\n"],"sourceRoot":""}